@*
    TicketDesk - Attribution notice
    Contributor(s):

         Stephen Redd (https://github.com/stephenredd)

    This file is distributed under the terms of the Microsoft Public
    License (Ms-PL). See http://opensource.org/licenses/MS-PL
    for the complete terms of use.

    For any distribution that contains code from this file, this notice of
    attribution must remain intact, and a copy of the license must be
    provided to the recipient.
*@
@using TicketDesk.Localization.Views.TicketCenter

@using X.PagedList.Mvc
@using TicketDesk.Domain.Model
@using System.Collections.Generic;
@using System.Reflection;
@model TicketDesk.Web.Client.Models.TicketCenterListViewModel
@{
    var tickets = Model.Tickets;
    var ajaxSortOptions = new AjaxOptions { UpdateTargetId = "ticketList", OnBegin = "ticketCenter.sorts.beginChangeSort", OnSuccess = "ticketCenter.completeChangeList", OnFailure = "ticketCenter.completeChangeList" };
    var ajaxPagerOptions = new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "ticketList", OnBegin = "ticketCenter.paging.beginChangePage", OnSuccess = "ticketCenter.completeChangeList", OnFailure = "ticketCenter.completeChangeList" };
}
<div id="ticketList" class="panel panel-default">
    <div class="panel-heading row-no-padding">
        @Html.Partial("_FilterBar")
    </div>
    <div class="panel-body" style="padding: 0;">
        <div class="table-responsive">
            <table class="table table-hover table-condensed">
                <thead>
                    <tr>
                       
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Title", Index_sq.TicketList_Title, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "TicketStatus", Index_sq.TicketList_Status, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Owner", Index_sq.TicketList_Owner, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "AssignedTo", Index_sq.TicketList_Assigned, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "TicketType", Index_sq.TicketList_Type, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Category", Index_sq.TicketList_Category, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Priority", Index_sq.TicketList_Priority, ajaxSortOptions)
                        </th>
                        <th class="hidden-sm hidden-xs">
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "CreatedDate", Index_sq.TicketList_Created, ajaxSortOptions)
                        </th>
                        <th>
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "LastUpdateDate", Index_sq.TicketList_Updated, ajaxSortOptions)
                        </th>
                        <th>
                            @Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Details", Index_sq.TicketList_Details, ajaxSortOptions)
                        </th>
                    </tr>
                </thead>
                <tbody class="ticketItems">

                   @foreach (var item in tickets)
                    {
                        <tr class="hidden-xs">
                            <td >
                                
                                @Html.DisplayFor(modelItem => item.Title)
                                @if (Model.DisplayProjects)
                                {
                                    <div>
                                        <span class="small text-muted">
                                            <i class="fa fa-book">@item.Project.ProjectName</i>
                                            </span>
                                    </div>
                                }
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @Html.DisplayFor(modelItem => item.TicketStatus)
                            </td>
                            <td class="hidden-xs hidden-xs">
                                @Html.DisplayFor(modelItem => item.GetOwnerInfo().DisplayName)
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @Html.DisplayFor(modelItem => item.GetAssignedToInfo().Email)
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @Html.DisplayFor(modelItem => item.TicketType)
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @Html.DisplayFor(modelItem => item.Category)
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @Html.DisplayFor(modelItem => item.Priority)
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @item.CreatedDate.ToString("d")<br />
                                @item.CreatedDate.ToString("t")
                            </td>
                            <td>
                                @item.LastUpdateDate.ToString("d")<br />
                                @item.LastUpdateDate.ToString("t")
                            </td>
                            <td>
                                @if (item.Details.Length > 10)
                                {
                                    @item.Details.Substring(0,3+(item.Details.Length) / 2)
                                }
                                else
                                {
                                    @item.Details.ToString()
                                }
                                
                                   
                            </td>

                        </tr>

                    }
                </tbody>

            </table>
        </div>
    </div>
    <div class="panel-footer">
        @Html.PagedListPager(Model.Tickets, page => Url.Action("PageList", new { listName = Model.CurrentListSetting.ListName, page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(ajaxPagerOptions))
    </div>
</div>